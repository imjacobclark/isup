{
  "Resources": {
    "IsupIsupHandlerServiceRole6D52EFB2": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "IsupStack/Isup/IsupHandler/ServiceRole/Resource"
      }
    },
    "IsupIsupHandler87FD3F73": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "AssetParameters25e306bea5a91e982d58695713c7efd19caaa589332d997f5c43f168b99760c8S3BucketDE6421E3"
          },
          "S3Key": {
            "Fn::Join": [
              "",
              [
                {
                  "Fn::Select": [
                    0,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParameters25e306bea5a91e982d58695713c7efd19caaa589332d997f5c43f168b99760c8S3VersionKey967ED7C1"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Fn::Select": [
                    1,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParameters25e306bea5a91e982d58695713c7efd19caaa589332d997f5c43f168b99760c8S3VersionKey967ED7C1"
                        }
                      ]
                    }
                  ]
                }
              ]
            ]
          }
        },
        "Handler": "isup.main",
        "Role": {
          "Fn::GetAtt": [
            "IsupIsupHandlerServiceRole6D52EFB2",
            "Arn"
          ]
        },
        "Runtime": "nodejs8.10",
        "Timeout": 300
      },
      "DependsOn": [
        "IsupIsupHandlerServiceRole6D52EFB2"
      ],
      "Metadata": {
        "aws:cdk:path": "IsupStack/Isup/IsupHandler/Resource",
        "aws:asset:path": "asset.25e306bea5a91e982d58695713c7efd19caaa589332d997f5c43f168b99760c8",
        "aws:asset:property": "Code"
      }
    },
    "IsupisupapiF0E94915": {
      "Type": "AWS::ApiGateway::RestApi",
      "Properties": {
        "Description": "This service serves isup.",
        "Name": "Isup Service"
      },
      "Metadata": {
        "aws:cdk:path": "IsupStack/Isup/isup-api/Resource"
      }
    },
    "IsupisupapiDeployment12B17A4E86a7b8c49711f01deedb1c3fdeca4450": {
      "Type": "AWS::ApiGateway::Deployment",
      "Properties": {
        "RestApiId": {
          "Ref": "IsupisupapiF0E94915"
        },
        "Description": "Automatically created by the RestApi construct"
      },
      "DependsOn": [
        "IsupisupapiGET1EA4B9E0"
      ],
      "Metadata": {
        "aws:cdk:path": "IsupStack/Isup/isup-api/Deployment/Resource"
      }
    },
    "IsupisupapiDeploymentStageprodBDA5121C": {
      "Type": "AWS::ApiGateway::Stage",
      "Properties": {
        "RestApiId": {
          "Ref": "IsupisupapiF0E94915"
        },
        "DeploymentId": {
          "Ref": "IsupisupapiDeployment12B17A4E86a7b8c49711f01deedb1c3fdeca4450"
        },
        "StageName": "prod"
      },
      "Metadata": {
        "aws:cdk:path": "IsupStack/Isup/isup-api/DeploymentStage.prod/Resource"
      }
    },
    "IsupisupapiCloudWatchRole4E212EDD": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "apigateway.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs"
              ]
            ]
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "IsupStack/Isup/isup-api/CloudWatchRole/Resource"
      }
    },
    "IsupisupapiAccount136683D0": {
      "Type": "AWS::ApiGateway::Account",
      "Properties": {
        "CloudWatchRoleArn": {
          "Fn::GetAtt": [
            "IsupisupapiCloudWatchRole4E212EDD",
            "Arn"
          ]
        }
      },
      "DependsOn": [
        "IsupisupapiF0E94915"
      ],
      "Metadata": {
        "aws:cdk:path": "IsupStack/Isup/isup-api/Account"
      }
    },
    "IsupisupapiGETApiPermissionIsupStackIsupisupapiD3F9C5B2GET3E24D384": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "IsupIsupHandler87FD3F73",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "IsupisupapiF0E94915"
              },
              "/",
              {
                "Ref": "IsupisupapiDeploymentStageprodBDA5121C"
              },
              "/GET/"
            ]
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "IsupStack/Isup/isup-api/Default/GET/ApiPermission.IsupStackIsupisupapiD3F9C5B2.GET.."
      }
    },
    "IsupisupapiGETApiPermissionTestIsupStackIsupisupapiD3F9C5B2GETB0E6F81E": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "IsupIsupHandler87FD3F73",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "IsupisupapiF0E94915"
              },
              "/test-invoke-stage/GET/"
            ]
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "IsupStack/Isup/isup-api/Default/GET/ApiPermission.Test.IsupStackIsupisupapiD3F9C5B2.GET.."
      }
    },
    "IsupisupapiGET1EA4B9E0": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "GET",
        "ResourceId": {
          "Fn::GetAtt": [
            "IsupisupapiF0E94915",
            "RootResourceId"
          ]
        },
        "RestApiId": {
          "Ref": "IsupisupapiF0E94915"
        },
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "RequestTemplates": {
            "application/json": "{ \"statusCode\": \"200\" }"
          },
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "IsupIsupHandler87FD3F73",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        }
      },
      "Metadata": {
        "aws:cdk:path": "IsupStack/Isup/isup-api/Default/GET/Resource"
      }
    }
  },
  "Outputs": {
    "IsupisupapiEndpoint4BC83D66": {
      "Value": {
        "Fn::Join": [
          "",
          [
            "https://",
            {
              "Ref": "IsupisupapiF0E94915"
            },
            ".execute-api.",
            {
              "Ref": "AWS::Region"
            },
            ".",
            {
              "Ref": "AWS::URLSuffix"
            },
            "/",
            {
              "Ref": "IsupisupapiDeploymentStageprodBDA5121C"
            },
            "/"
          ]
        ]
      }
    }
  },
  "Parameters": {
    "AssetParameters25e306bea5a91e982d58695713c7efd19caaa589332d997f5c43f168b99760c8S3BucketDE6421E3": {
      "Type": "String",
      "Description": "S3 bucket for asset \"25e306bea5a91e982d58695713c7efd19caaa589332d997f5c43f168b99760c8\""
    },
    "AssetParameters25e306bea5a91e982d58695713c7efd19caaa589332d997f5c43f168b99760c8S3VersionKey967ED7C1": {
      "Type": "String",
      "Description": "S3 key for asset version \"25e306bea5a91e982d58695713c7efd19caaa589332d997f5c43f168b99760c8\""
    },
    "AssetParameters25e306bea5a91e982d58695713c7efd19caaa589332d997f5c43f168b99760c8ArtifactHash3852216B": {
      "Type": "String",
      "Description": "Artifact hash for asset \"25e306bea5a91e982d58695713c7efd19caaa589332d997f5c43f168b99760c8\""
    }
  }
}